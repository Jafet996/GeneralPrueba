'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:4.0.30319.42000
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On

Imports System
Imports System.ComponentModel
Imports System.Diagnostics
Imports System.Web.Services
Imports System.Web.Services.Protocols
Imports System.Xml.Serialization

'
'This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
'
Namespace WsFEMaster
    
    'CODEGEN: The optional WSDL extension element 'PolicyReference' from namespace 'http://schemas.xmlsoap.org/ws/2004/09/policy' was not handled.
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Web.Services.WebServiceBindingAttribute(Name:="BasicHttpsBinding_IFEMASTER", [Namespace]:="http://tempuri.org/")>  _
    Partial Public Class FEMASTER
        Inherits System.Web.Services.Protocols.SoapHttpClientProtocol
        
        Private GetConnectionConsultaOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetConnectionFeCoreOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetConnectionSourceOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetEmisor_IdOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetEmisorByClaveOperationCompleted As System.Threading.SendOrPostCallback
        
        Private SaveEmisorOperationCompleted As System.Threading.SendOrPostCallback
        
        Private VerificaBatch_IdOperationCompleted As System.Threading.SendOrPostCallback
        
        Private useDefaultCredentialsSetExplicitly As Boolean
        
        '''<remarks/>
        Public Sub New()
            MyBase.New
            Me.Url = Global.Business.My.MySettings.Default.Business_WsFEMaster_FEMASTER
            If (Me.IsLocalFileSystemWebService(Me.Url) = true) Then
                Me.UseDefaultCredentials = true
                Me.useDefaultCredentialsSetExplicitly = false
            Else
                Me.useDefaultCredentialsSetExplicitly = true
            End If
        End Sub
        
        Public Shadows Property Url() As String
            Get
                Return MyBase.Url
            End Get
            Set
                If (((Me.IsLocalFileSystemWebService(MyBase.Url) = true)  _
                            AndAlso (Me.useDefaultCredentialsSetExplicitly = false))  _
                            AndAlso (Me.IsLocalFileSystemWebService(value) = false)) Then
                    MyBase.UseDefaultCredentials = false
                End If
                MyBase.Url = value
            End Set
        End Property
        
        Public Shadows Property UseDefaultCredentials() As Boolean
            Get
                Return MyBase.UseDefaultCredentials
            End Get
            Set
                MyBase.UseDefaultCredentials = value
                Me.useDefaultCredentialsSetExplicitly = true
            End Set
        End Property
        
        '''<remarks/>
        Public Event GetConnectionConsultaCompleted As GetConnectionConsultaCompletedEventHandler
        
        '''<remarks/>
        Public Event GetConnectionFeCoreCompleted As GetConnectionFeCoreCompletedEventHandler
        
        '''<remarks/>
        Public Event GetConnectionSourceCompleted As GetConnectionSourceCompletedEventHandler
        
        '''<remarks/>
        Public Event GetEmisor_IdCompleted As GetEmisor_IdCompletedEventHandler
        
        '''<remarks/>
        Public Event GetEmisorByClaveCompleted As GetEmisorByClaveCompletedEventHandler
        
        '''<remarks/>
        Public Event SaveEmisorCompleted As SaveEmisorCompletedEventHandler
        
        '''<remarks/>
        Public Event VerificaBatch_IdCompleted As VerificaBatch_IdCompletedEventHandler
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IFEMASTER/GetConnectionConsulta", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetConnectionConsulta(ByVal pEmisor_Id As Integer) As String
            Dim results() As Object = Me.Invoke("GetConnectionConsulta", New Object() {pEmisor_Id})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetConnectionConsultaAsync(ByVal pEmisor_Id As Integer)
            Me.GetConnectionConsultaAsync(pEmisor_Id, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetConnectionConsultaAsync(ByVal pEmisor_Id As Integer, ByVal userState As Object)
            If (Me.GetConnectionConsultaOperationCompleted Is Nothing) Then
                Me.GetConnectionConsultaOperationCompleted = AddressOf Me.OnGetConnectionConsultaOperationCompleted
            End If
            Me.InvokeAsync("GetConnectionConsulta", New Object() {pEmisor_Id}, Me.GetConnectionConsultaOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetConnectionConsultaOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetConnectionConsultaCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetConnectionConsultaCompleted(Me, New GetConnectionConsultaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IFEMASTER/GetConnectionFeCore", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetConnectionFeCore(ByVal pEmisor_Id As Integer) As String
            Dim results() As Object = Me.Invoke("GetConnectionFeCore", New Object() {pEmisor_Id})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetConnectionFeCoreAsync(ByVal pEmisor_Id As Integer)
            Me.GetConnectionFeCoreAsync(pEmisor_Id, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetConnectionFeCoreAsync(ByVal pEmisor_Id As Integer, ByVal userState As Object)
            If (Me.GetConnectionFeCoreOperationCompleted Is Nothing) Then
                Me.GetConnectionFeCoreOperationCompleted = AddressOf Me.OnGetConnectionFeCoreOperationCompleted
            End If
            Me.InvokeAsync("GetConnectionFeCore", New Object() {pEmisor_Id}, Me.GetConnectionFeCoreOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetConnectionFeCoreOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetConnectionFeCoreCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetConnectionFeCoreCompleted(Me, New GetConnectionFeCoreCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IFEMASTER/GetConnectionSource", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetConnectionSource(ByVal pEmisor_Id As Integer) As String
            Dim results() As Object = Me.Invoke("GetConnectionSource", New Object() {pEmisor_Id})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetConnectionSourceAsync(ByVal pEmisor_Id As Integer)
            Me.GetConnectionSourceAsync(pEmisor_Id, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetConnectionSourceAsync(ByVal pEmisor_Id As Integer, ByVal userState As Object)
            If (Me.GetConnectionSourceOperationCompleted Is Nothing) Then
                Me.GetConnectionSourceOperationCompleted = AddressOf Me.OnGetConnectionSourceOperationCompleted
            End If
            Me.InvokeAsync("GetConnectionSource", New Object() {pEmisor_Id}, Me.GetConnectionSourceOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetConnectionSourceOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetConnectionSourceCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetConnectionSourceCompleted(Me, New GetConnectionSourceCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IFEMASTER/GetEmisor_Id", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetEmisor_Id() As RespuestaConsecutivo
            Dim results() As Object = Me.Invoke("GetEmisor_Id", New Object(-1) {})
            Return CType(results(0),RespuestaConsecutivo)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetEmisor_IdAsync()
            Me.GetEmisor_IdAsync(Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetEmisor_IdAsync(ByVal userState As Object)
            If (Me.GetEmisor_IdOperationCompleted Is Nothing) Then
                Me.GetEmisor_IdOperationCompleted = AddressOf Me.OnGetEmisor_IdOperationCompleted
            End If
            Me.InvokeAsync("GetEmisor_Id", New Object(-1) {}, Me.GetEmisor_IdOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetEmisor_IdOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetEmisor_IdCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetEmisor_IdCompleted(Me, New GetEmisor_IdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IFEMASTER/GetEmisorByClave", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetEmisorByClave(ByVal pClave As String) As RespuestaConsecutivo
            Dim results() As Object = Me.Invoke("GetEmisorByClave", New Object() {pClave})
            Return CType(results(0),RespuestaConsecutivo)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetEmisorByClaveAsync(ByVal pClave As String)
            Me.GetEmisorByClaveAsync(pClave, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetEmisorByClaveAsync(ByVal pClave As String, ByVal userState As Object)
            If (Me.GetEmisorByClaveOperationCompleted Is Nothing) Then
                Me.GetEmisorByClaveOperationCompleted = AddressOf Me.OnGetEmisorByClaveOperationCompleted
            End If
            Me.InvokeAsync("GetEmisorByClave", New Object() {pClave}, Me.GetEmisorByClaveOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetEmisorByClaveOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetEmisorByClaveCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetEmisorByClaveCompleted(Me, New GetEmisorByClaveCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IFEMASTER/SaveEmisor", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function SaveEmisor(ByVal pEmisor As Emisor) As String
            Dim results() As Object = Me.Invoke("SaveEmisor", New Object() {pEmisor})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub SaveEmisorAsync(ByVal pEmisor As Emisor)
            Me.SaveEmisorAsync(pEmisor, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub SaveEmisorAsync(ByVal pEmisor As Emisor, ByVal userState As Object)
            If (Me.SaveEmisorOperationCompleted Is Nothing) Then
                Me.SaveEmisorOperationCompleted = AddressOf Me.OnSaveEmisorOperationCompleted
            End If
            Me.InvokeAsync("SaveEmisor", New Object() {pEmisor}, Me.SaveEmisorOperationCompleted, userState)
        End Sub
        
        Private Sub OnSaveEmisorOperationCompleted(ByVal arg As Object)
            If (Not (Me.SaveEmisorCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent SaveEmisorCompleted(Me, New SaveEmisorCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IFEMASTER/VerificaBatch_Id", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function VerificaBatch_Id(ByVal pEmisor_Id As Integer, ByVal pBatch_Id As Long) As Integer
            Dim results() As Object = Me.Invoke("VerificaBatch_Id", New Object() {pEmisor_Id, pBatch_Id})
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Overloads Sub VerificaBatch_IdAsync(ByVal pEmisor_Id As Integer, ByVal pBatch_Id As Long)
            Me.VerificaBatch_IdAsync(pEmisor_Id, pBatch_Id, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub VerificaBatch_IdAsync(ByVal pEmisor_Id As Integer, ByVal pBatch_Id As Long, ByVal userState As Object)
            If (Me.VerificaBatch_IdOperationCompleted Is Nothing) Then
                Me.VerificaBatch_IdOperationCompleted = AddressOf Me.OnVerificaBatch_IdOperationCompleted
            End If
            Me.InvokeAsync("VerificaBatch_Id", New Object() {pEmisor_Id, pBatch_Id}, Me.VerificaBatch_IdOperationCompleted, userState)
        End Sub
        
        Private Sub OnVerificaBatch_IdOperationCompleted(ByVal arg As Object)
            If (Not (Me.VerificaBatch_IdCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent VerificaBatch_IdCompleted(Me, New VerificaBatch_IdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        Public Shadows Sub CancelAsync(ByVal userState As Object)
            MyBase.CancelAsync(userState)
        End Sub
        
        Private Function IsLocalFileSystemWebService(ByVal url As String) As Boolean
            If ((url Is Nothing)  _
                        OrElse (url Is String.Empty)) Then
                Return false
            End If
            Dim wsUri As System.Uri = New System.Uri(url)
            If ((wsUri.Port >= 1024)  _
                        AndAlso (String.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) = 0)) Then
                Return true
            End If
            Return false
        End Function
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.3056.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://tempuri.org/")>  _
    Partial Public Class RespuestaConsecutivo
        
        Private errorCodeField As String
        
        Private errorMessageField As String
        
        Private emisor_IdField As Integer
        
        '''<remarks/>
        Public Property errorCode() As String
            Get
                Return Me.errorCodeField
            End Get
            Set
                Me.errorCodeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property errorMessage() As String
            Get
                Return Me.errorMessageField
            End Get
            Set
                Me.errorMessageField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property emisor_Id() As Integer
            Get
                Return Me.emisor_IdField
            End Get
            Set
                Me.emisor_IdField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.3056.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://tempuri.org/")>  _
    Partial Public Class Emisor
        
        Private emisor_IdField As Integer
        
        Private sucursalField As String
        
        Private nombreField As String
        
        Private identificacionField As String
        
        Private servidorField As String
        
        Private baseDatosField As String
        
        Private usuarioField As String
        
        Private passwordField As String
        
        '''<remarks/>
        Public Property emisor_Id() As Integer
            Get
                Return Me.emisor_IdField
            End Get
            Set
                Me.emisor_IdField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property sucursal() As String
            Get
                Return Me.sucursalField
            End Get
            Set
                Me.sucursalField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property nombre() As String
            Get
                Return Me.nombreField
            End Get
            Set
                Me.nombreField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property identificacion() As String
            Get
                Return Me.identificacionField
            End Get
            Set
                Me.identificacionField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property servidor() As String
            Get
                Return Me.servidorField
            End Get
            Set
                Me.servidorField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property baseDatos() As String
            Get
                Return Me.baseDatosField
            End Get
            Set
                Me.baseDatosField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property usuario() As String
            Get
                Return Me.usuarioField
            End Get
            Set
                Me.usuarioField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property password() As String
            Get
                Return Me.passwordField
            End Get
            Set
                Me.passwordField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub GetConnectionConsultaCompletedEventHandler(ByVal sender As Object, ByVal e As GetConnectionConsultaCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetConnectionConsultaCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub GetConnectionFeCoreCompletedEventHandler(ByVal sender As Object, ByVal e As GetConnectionFeCoreCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetConnectionFeCoreCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub GetConnectionSourceCompletedEventHandler(ByVal sender As Object, ByVal e As GetConnectionSourceCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetConnectionSourceCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub GetEmisor_IdCompletedEventHandler(ByVal sender As Object, ByVal e As GetEmisor_IdCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetEmisor_IdCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As RespuestaConsecutivo
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),RespuestaConsecutivo)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub GetEmisorByClaveCompletedEventHandler(ByVal sender As Object, ByVal e As GetEmisorByClaveCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetEmisorByClaveCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As RespuestaConsecutivo
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),RespuestaConsecutivo)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub SaveEmisorCompletedEventHandler(ByVal sender As Object, ByVal e As SaveEmisorCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class SaveEmisorCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub VerificaBatch_IdCompletedEventHandler(ByVal sender As Object, ByVal e As VerificaBatch_IdCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class VerificaBatch_IdCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Integer)
            End Get
        End Property
    End Class
End Namespace
